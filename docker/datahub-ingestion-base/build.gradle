plugins {
    id 'com.palantir.docker'
    id 'java' // required for versioning
}

apply from: "../../gradle/versioning/versioning.gradle"

ext {
    docker_registry = rootProject.ext.docker_registry == 'linkedin' ? 'acryldata' : docker_registry
    docker_repo = 'datahub-ingestion-base'
    docker_dir = 'datahub-ingestion-base'
}

docker {
    name "${docker_registry}/${docker_repo}:v${version}-slim"
    version "v${version}-slim"
    dockerfile file("${rootProject.projectDir}/docker/${docker_dir}/Dockerfile")
    files fileTree(rootProject.projectDir) {
        include "docker/${docker_dir}/*"
    }.exclude {
        i -> i.file.isHidden() || i.file == buildDir
    }
    buildArgs([APP_ENV: 'slim'])
}
tasks.getByName('docker').dependsOn('build')

task mkdirBuildDocker {
    doFirst {
        mkdir "${project.buildDir}/docker"
    }
}
dockerClean.finalizedBy(mkdirBuildDocker)
dockerClean.dependsOn([':docker:datahub-ingestion:dockerClean'])

task cleanLocalDockerImages {
    doLast {
        rootProject.ext.cleanLocalDockerImages(docker_registry, docker_repo, "${version}")
    }
}
dockerClean.finalizedBy(cleanLocalDockerImages)